#! /usr/bin/env bash

# Generates the https://specs.sh/extensions API reference documentation
#
# For every top-level API command (folder under `src/--/`) generate or update:
#
# - A page containing all of the markdown documentation from that folder
#
# - An item in the /extensions sidebar with all subfolders or commands as children
#   where the children are linked via # to the section in the generated page
#
# - A new sidebar for just that page containing headers for each subfolder or command
#   and child items for every subfolder or command in that folder
#

generateApiDocs() {
  local apiCommandFolder
  for apiCommandFolder in ./src/--/*
  do
    local commandName="${apiCommandFolder##*/}"
    local markdownFile="docs/_pages/extensions/$commandName.md"
    echo "---
title: '$commandName API Reference'
permalink: /extensions/$commandName
layout: singleModified
sidebar:
  nav: 'extensions-$commandName'
toc: true
---
" > "$markdownFile"
    grep -rl "^[[:space:]]*##" "$apiCommandFolder" | sort --version-sort | xargs -n1 grep -h "^[[:space:]]*##" | sed 's/^[[:space:]]*//' | sed 's/^##[[:space:]]\?//' >> "$markdownFile"
  done
  ./scripts/generate-api-navigation

  # Finally, generate the /developer [developer.md] page using the docSnippets/developer.md
  # snippet and then adding all of the .docs.sh files which act as small descriptive headers
  # for APIs and Extensions etc.
  cat scripts/docSnippets/developer.md > docs/_pages/developer.md
  find src/ -name .docs.sh | sort --version-sort | xargs -n1 grep -h "^[[:space:]]*##" | sed 's/^[[:space:]]*//' | sed 's/^##[[:space:]]\?//' >> docs/_pages/developer.md
}

generateApiDocs